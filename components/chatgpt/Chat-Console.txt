initializationContentScript.js:1 Chrome storage API available, initializing emoji style sync
content.js:1 [Deprecation] Listener added for a 'DOMNodeInserted' mutation event. Support for this event type has been removed, and this event will no longer be fired. See https://chromestatus.com/feature/5083947249172480 for more information.
(anonymous) @ content.js:1
j @ jquery.js:2
fireWith @ jquery.js:2
ready @ jquery.js:2
I @ jquery.js:2
contentScript.js:2 Chrome storage API available, initializing emoji style sync
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
RouteTracker.tsx:32 [RouteTracker] Route change effect triggered with pathname: /home
RouteTracker.tsx:39 [RouteTracker] Audio cleanup effect triggered
RouteTracker.tsx:40 [RouteTracker] Current pathname: /home
RouteTracker.tsx:41 [RouteTracker] Current loop: null
layout.tsx:46 ðŸŽ« Subscription Status: FREE
RouteTracker.tsx:32 [RouteTracker] Route change effect triggered with pathname: /home
RouteTracker.tsx:39 [RouteTracker] Audio cleanup effect triggered
RouteTracker.tsx:40 [RouteTracker] Current pathname: /home
RouteTracker.tsx:41 [RouteTracker] Current loop: null
layout.tsx:46 ðŸŽ« Subscription Status: FREE
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null

                
          
          
          
         Chrome is moving towards a new experience that allows users to choose to browse without third-party cookies.
script.debug.js:1 [Vercel Web Analytics] Debug mode is enabled by default in development. No requests will be sent to the server.
script.debug.js:1 [Vercel Web Analytics] [pageview] http://localhost:3000/home?debug=true {o: 'http://localhost:3000/home?debug=true', sv: '0.1.2', sdkn: '@vercel/analytics/react', sdkv: '1.3.1', ts: 1742031155968,Â â€¦}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
layout.tsx:46 ðŸŽ« Subscription Status: GOLD or PREMIUM
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:87 [ChatContainer] Mount effect triggered {isMounted: false, currentHistory: Array(0), settings: {â€¦}}
ChatContainer.tsx:94 [ChatContainer] Component not mounted, initializing...
ChatContainer.tsx:99 [ChatContainer] Current chat history: []
ChatContainer.tsx:107 [ChatContainer] Has initial message: false
ChatContainer.tsx:110 [ChatContainer] Adding initial message: Hey Mike! Welcome back, I've missed seeing ya! This week you've got:

1) a practice test - UWorld at 4:00 PM

2) According to your knowledge profiles, you're weakest in:
   Biochemistry, Physics, Psychology

3) Your UWorld exam is coming up in 21 days!

How can I help you prepare today?
ChatContainer.tsx:112 [ChatContainer] Updated chat history: [{â€¦}]
ChatContainer.tsx:284 [ChatContainer] Current prompt changed: {currentPrompt: null}
ChatContainer.tsx:297 [Debug] Chat history updated: [{â€¦}]
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:596 [ChatContainer] Chat history state: {messages: Array(1), count: 1, timestamp: '2025-03-15T09:32:39.324Z'}
ChatContainer.tsx:87 [ChatContainer] Mount effect triggered {isMounted: false, currentHistory: Array(1), settings: {â€¦}}
ChatContainer.tsx:94 [ChatContainer] Component not mounted, initializing...
ChatContainer.tsx:99 [ChatContainer] Current chat history: [{â€¦}]
ChatContainer.tsx:103 [ChatContainer] Checking message: {msg: {â€¦}, matches: true}
ChatContainer.tsx:107 [ChatContainer] Has initial message: true
ChatContainer.tsx:284 [ChatContainer] Current prompt changed: {currentPrompt: null}
ChatContainer.tsx:297 [Debug] Chat history updated: [{â€¦}]
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:596 [ChatContainer] Chat history state: {messages: Array(1), count: 1, timestamp: '2025-03-15T09:32:39.337Z'}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:87 [ChatContainer] Mount effect triggered {isMounted: true, currentHistory: Array(1), settings: {â€¦}}
ChatContainer.tsx:297 [Debug] Chat history updated: [{â€¦}]
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:596 [ChatContainer] Chat history state: {messages: Array(1), count: 1, timestamp: '2025-03-15T09:32:39.358Z'}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
RouteTracker.tsx:26 [RouteTracker] Component rendered with pathname: /home
RouteTracker.tsx:27 [RouteTracker] Current loop state: null
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
ChatContainer.tsx:70 [ChatContainer] Initial render with props: {className: undefined, hasRef: true}
ChatContainer.tsx:585 [ChatContainer] Render effect: {hasInitialMessage: true, storeHistory: Array(1), disabled: true, storageKey: undefined}
