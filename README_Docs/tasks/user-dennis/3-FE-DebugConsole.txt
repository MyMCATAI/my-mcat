initializationContentScript.js:1 Chrome storage API available, initializing emoji style sync
content.js:1 [Deprecation] Listener added for a 'DOMNodeInserted' mutation event. Support for this event type has been removed, and this event will no longer be fired. See https://chromestatus.com/feature/5083947249172480 for more information.
(anonymous) @ content.js:1
j @ jquery.js:2
fireWith @ jquery.js:2
ready @ jquery.js:2
I @ jquery.js:2
contentScript.js:2 Chrome storage API available, initializing emoji style sync
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: null forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: false
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: null, isInitialized: false, hasUserInfo: false, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: false, isLoaded: true, isSignedIn: undefined, pathname: '/home', userInfoExists: false,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
musicplayer.tsx:104 [MusicPlayer] Initializing audio context
musicplayer.tsx:116 [MusicPlayer] Theme changed or component mounted, theme: cyberSpace
musicplayer.tsx:131 [MusicPlayer] Queue status: {initialized: false, queueLength: 0, firstSongMatchesTheme: false, shouldUpdateQueue: true}
musicplayer.tsx:139 [MusicPlayer] Updating song queue for theme: cyberSpace
audioSlice.ts:200 [AudioSlice] Theme changed to cyberSpace wasPlaying: false
ProfileButton.tsx:68 [Debug] Profile loading state changed: true
ProfileButton.tsx:70 [Debug] Profile is currently loading
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: false}
page.tsx:106 [HomePage] Setting up safety timer
page.tsx:176 [HomePage] Loading state check: {isLoadingUserInfo: false, loadingState: {â€¦}}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: false, isLoadingUserInfo: false}
selectors.ts:74 [useNavigation] navigateHomeTab called with: KalypsoAI, current page: KalypsoAI
uiSlice.ts:80 [uiSlice] setPage called with: KalypsoAI
uiSlice.ts:84 [uiSlice] setPage - no change needed, page already: KalypsoAI
selectors.ts:79 [useNavigation] navigateHomeTab completed, page should now be: KalypsoAI
page.tsx:494 [HomePage] Component lifecycle effect
layout.tsx:46 ðŸŽ« Subscription Status: FREE
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: false, isLoaded: true, isSignedIn: undefined, pathname: '/home', userInfoExists: false,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
musicplayer.tsx:104 [MusicPlayer] Initializing audio context
musicplayer.tsx:116 [MusicPlayer] Theme changed or component mounted, theme: cyberSpace
musicplayer.tsx:131 [MusicPlayer] Queue status: {initialized: true, queueLength: 0, firstSongMatchesTheme: false, shouldUpdateQueue: true}
musicplayer.tsx:139 [MusicPlayer] Updating song queue for theme: cyberSpace
audioSlice.ts:200 [AudioSlice] Theme changed to cyberSpace wasPlaying: false
ProfileButton.tsx:68 [Debug] Profile loading state changed: true
ProfileButton.tsx:70 [Debug] Profile is currently loading
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: false}
page.tsx:106 [HomePage] Setting up safety timer
page.tsx:176 [HomePage] Loading state check: {isLoadingUserInfo: false, loadingState: {â€¦}}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: false, isLoadingUserInfo: false}
page.tsx:494 [HomePage] Component lifecycle effect
layout.tsx:46 ðŸŽ« Subscription Status: FREE
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: null forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
musicplayer.tsx:104 [MusicPlayer] Initializing audio context
musicplayer.tsx:116 [MusicPlayer] Theme changed or component mounted, theme: cyberSpace
musicplayer.tsx:131 [MusicPlayer] Queue status: {initialized: true, queueLength: 10, firstSongMatchesTheme: true, shouldUpdateQueue: false}
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: false}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: false, isLoadingUserInfo: false}
musicplayer.tsx:107 [MusicPlayer] Audio context initialized successfully
musicplayer.tsx:107 [MusicPlayer] Audio context initialized successfully
musicplayer.tsx:107 [MusicPlayer] Audio context initialized successfully
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
script.debug.js:1 [Vercel Web Analytics] Debug mode is enabled by default in development. No requests will be sent to the server.
script.debug.js:1 [Vercel Web Analytics] [pageview] http://localhost:3000/home {o: 'http://localhost:3000/home', sv: '0.1.2', sdkn: '@vercel/analytics/react', sdkv: '1.3.1', ts: 1743191716954,Â â€¦}
audioSlice.ts:226 [AudioSlice] Not playing music after theme change
audioSlice.ts:226 [AudioSlice] Not playing music after theme change

                
          
          
          
         Chrome is moving towards a new experience that allows users to choose to browse without third-party cookies.
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: null forceShowProfile: false
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: false, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: false,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
useUserInfo.ts:137 [useUserInfo] Initializing with user ID: user_2rFXhmeHNzY3irm9HShrGMGMY3M
useUserInfo.ts:120 [useUserInfo] Starting initial fetch
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: null forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: false}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: false, isLoadingUserInfo: false}
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
ProfileButton.tsx:78 [Debug] Profile loading timeout - forcing display of default profile
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: null forceShowProfile: true
ProfileButton.tsx:10 [Debug] ProfileImage rendering with photo: undefined
ProfileButton.tsx:68 [Debug] Profile loading state changed: true
ProfileButton.tsx:70 [Debug] Profile is currently loading
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: false}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: false, isLoadingUserInfo: false}
ProfileButton.tsx:21 [Debug] Profile image loaded: undefined
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
 [UserStore DEBUG] Profile data changed, updating
 [UserStore DEBUG] Applying updates to store: (12)Â ['error', 'version', 'userInfo', 'coins', 'isSubscribed', 'profile', 'completedSteps', 'studyPreferences', 'interfaceSettings', 'tutorialProgress', 'lastVisitedRoute', 'isProfileComplete']
 [UserStore DEBUG] Store updates applied
 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: true
 [Debug] ProfileImage rendering with photo: 
 [HomePage] Component rendering
 [HomePage] hasSeenIntroVideo calculated: true
 [HomePage] shouldInitialize check: {shouldInit: true, isInitialized: false, hasUserInfo: true, isLoadingUserInfo: false}
 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
 [HomePage] Showing page initialization loading spinner
 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: false, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
ProfileButton.tsx:68 [Debug] Profile loading state changed: false
ProfileButton.tsx:87 [Debug] Profile loaded with data: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦}
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
layout.tsx:46 ðŸŽ« Subscription Status: GOLD or PREMIUM
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:215 [ROUTE_TRACKER] No valid cache found, fetching from API...
ProfileButton.tsx:68 [Debug] Profile loading state changed: false
ProfileButton.tsx:87 [Debug] Profile loaded with data: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦}
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
ProfileButton.tsx:68 [Debug] Profile loading state changed: true
ProfileButton.tsx:70 [Debug] Profile is currently loading
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
ProfileButton.tsx:10 [Debug] ProfileImage rendering with photo: 
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: true, isInitialized: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:431 [ROUTE_TRACKER] Skipping subscription/study plan checks due to conditions not met
ProfileButton.tsx:68 [Debug] Profile loading state changed: false
ProfileButton.tsx:87 [Debug] Profile loaded with data: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦}
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: true profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
ProfileButton.tsx:68 [Debug] Profile loading state changed: true
ProfileButton.tsx:70 [Debug] Profile is currently loading
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: true, showingContent: false}
page.tsx:659 [HomePage] Showing page initialization loading spinner
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: true, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: false, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:217 [HomePage] Starting initializeData
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
useUserInfo.ts:137 [useUserInfo] Initializing with user ID: user_2rFXhmeHNzY3irm9HShrGMGMY3M
useUserInfo.ts:120 [useUserInfo] Starting initial fetch
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
useUserInfo.ts:137 [useUserInfo] Initializing with user ID: user_2rFXhmeHNzY3irm9HShrGMGMY3M
useUserInfo.ts:120 [useUserInfo] Starting initial fetch
userSlice.ts:365 [UserStore DEBUG] Starting refreshUserInfo
userSlice.ts:372 [UserStore DEBUG] Making API requests for user info
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:176 [HomePage] Loading state check: {isLoadingUserInfo: false, loadingState: {â€¦}}
page.tsx:179 [HomePage] Fully loaded and ready to display content
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
ChatContainer.tsx:224 [ChatContainer] Component unmounted
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
ChatContainer.tsx:224 [ChatContainer] Component unmounted
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
RouteTracker.tsx:223 [ROUTE_TRACKER] Study plan API response received, caching result
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 0 seconds
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
ProfileButton.tsx:10 [Debug] ProfileImage rendering with photo: 
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
ChatContainer.tsx:224 [ChatContainer] Component unmounted
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 0 seconds
ProfileButton.tsx:68 [Debug] Profile loading state changed: false
ProfileButton.tsx:87 [Debug] Profile loaded with data: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦}
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
useUserInfo.ts:125 [useUserInfo] Initial fetch completed in 8736ms
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
useUserInfo.ts:142 [useUserInfo] Initialization completed in 8737ms
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
ProfileButton.tsx:21 [Debug] Profile image loaded: 
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
 [UserStore DEBUG] Processing profile response
 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
 [UserStore DEBUG] Profile data unchanged
 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
 [UserStore DEBUG] Store updates applied
 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
 [HomePage] Component rendering
 [HomePage] hasSeenIntroVideo calculated: true
 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
 [HomePage] Rendering main content
 [ChatContainer] Component unmounted
 [ROUTE_TRACKER] Subscription/study plan effect triggered
 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
 [ROUTE_TRACKER] Checking subscription and study plan...
 [ROUTE_TRACKER] Current path: /home
 [ROUTE_TRACKER] isSubscribed: true
 [ROUTE_TRACKER] Should check study plan: true
 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
 [ROUTE_TRACKER] Starting study plan check...
 [ROUTE_TRACKER] Current pathname: /home
 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 2 seconds
 [ChatContainer] Component mounted, prefetching welcome message
 [ChatContainer] TEST: Cleared cache flags to force template regeneration
 [ChatContainer] Waiting for activities to load before generating welcome message
 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
 [ROUTE_TRACKER] Study plan check result: true
 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
 [HomePage] Setting loading state to false
 [HomePage] Loading state should now be false
 [HomePage] Component rendering
 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
 [HomePage] Rendering main content
 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
 [HomePage] Component rendering
 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
ChatContainer.tsx:224 [ChatContainer] Component unmounted
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 2 seconds
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
ChatContainer.tsx:224 [ChatContainer] Component unmounted
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
ChatContainer.tsx:224 [ChatContainer] Component unmounted
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 3 seconds
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:150 [ChatContainer] Waiting for activities to load before generating welcome message
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
ChatContainer.tsx:224 [ChatContainer] Component unmounted
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:136 [ChatContainer] TEST: Cleared cache flags to force template regeneration
ChatContainer.tsx:160 [ChatContainer] Activities loaded, updating temporary welcome message
ChatContainer.tsx:178 [ChatContainer] Generated template welcome message: Good afternoon, Dennis Cao! It's 12:55 PM on Friday - great time for a focused study block.

Your next full-length practice exam is scheduled for March 29th (0 days away).

You don't have any specific tasks scheduled for today. Consider adding some study activities!

What can I help you with?
ChatContainer.tsx:224 [ChatContainer] Component unmounted
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:129 [ChatContainer] Skipping duplicate prefetch, already have welcome message in state
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:129 [ChatContainer] Skipping duplicate prefetch, already have welcome message in state
DraggableKalypso.tsx:231 Debug image loaded
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
ChatContainer.tsx:540 [ChatContainer] Using prefetched welcome message
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 3 seconds
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:129 [ChatContainer] Skipping duplicate prefetch, already have welcome message in state
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
useUserInfo.ts:125 [useUserInfo] Initial fetch completed in 3626ms
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
useUserInfo.ts:142 [useUserInfo] Initialization completed in 3626ms
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
ChatContainer.tsx:276 [ChatContainer] KeyDown: Enter repeat: false cmdPressedRef: false
userSlice.ts:378 [UserStore DEBUG] API responses received: {userInfoStatus: 200, profileStatus: 200}
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
userSlice.ts:389 [UserStore DEBUG] Received userInfo: {hasOnboardingInfo: true, hasSeenIntroVideo: true, userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', subscriptionType: 'gold'}
userSlice.ts:425 [UserStore DEBUG] Processing profile response
userSlice.ts:427 [UserStore DEBUG] Profile data: {hasProfilePhoto: false, firstName: 'Dennis Cao', completedStepsLength: undefined}
userSlice.ts:456 [UserStore DEBUG] Profile data unchanged
userSlice.ts:462 [UserStore DEBUG] Applying updates to store: (3)Â ['error', 'version', 'userInfo']
userSlice.ts:469 [UserStore DEBUG] Store updates applied
ProfileButton.tsx:46 [Debug] ProfileButton render - profileLoading: false profile: {userId: 'user_2rFXhmeHNzY3irm9HShrGMGMY3M', firstName: 'Dennis Cao', bio: 'MAIN ACCOUNT', coins: 24, profilePhoto: '',Â â€¦} forceShowProfile: false
page.tsx:41 [HomePage] Component rendering
page.tsx:186 [HomePage] hasSeenIntroVideo calculated: true
page.tsx:202 [HomePage] shouldInitialize check: {shouldInit: false, isInitialized: true, hasUserInfo: true, isLoadingUserInfo: false}
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
RouteTracker.tsx:402 [ROUTE_TRACKER] Subscription/study plan effect triggered
RouteTracker.tsx:403 [ROUTE_TRACKER] State values: {initialLoadComplete: true, isLoaded: true, isSignedIn: true, pathname: '/home', userInfoExists: true,Â â€¦}
RouteTracker.tsx:435 [ROUTE_TRACKER] All conditions met, proceeding with subscription/study plan checks
RouteTracker.tsx:439 [ROUTE_TRACKER] Checking subscription and study plan...
RouteTracker.tsx:440 [ROUTE_TRACKER] Current path: /home
RouteTracker.tsx:441 [ROUTE_TRACKER] isSubscribed: true
RouteTracker.tsx:454 [ROUTE_TRACKER] Should check study plan: true
RouteTracker.tsx:455 [ROUTE_TRACKER] Exempt paths check: (6)Â [{â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}, {â€¦}]
RouteTracker.tsx:461 [ROUTE_TRACKER] Initiating study plan check via checkStudyPlan()
RouteTracker.tsx:190 [ROUTE_TRACKER] Starting study plan check...
RouteTracker.tsx:191 [ROUTE_TRACKER] Current pathname: /home
RouteTracker.tsx:202 [ROUTE_TRACKER] Using cached study plan from localStorage, age: 5 seconds
ChatContainer.tsx:120 [ChatContainer] Component mounted, prefetching welcome message
ChatContainer.tsx:129 [ChatContainer] Skipping duplicate prefetch, already have welcome message in state
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
useUserInfo.ts:125 [useUserInfo] Initial fetch completed in 5505ms
RouteTracker.tsx:467 [ROUTE_TRACKER] Study plan check result: true
useUserInfo.ts:142 [useUserInfo] Initialization completed in 5505ms
ChatContainer.tsx:276 [ChatContainer] KeyDown: Enter repeat: false cmdPressedRef: false
page.tsx:238 [HomePage] Data loaded successfully {activitiesCount: 6, proStatus: false}
page.tsx:249 [HomePage] Setting loading state to false
page.tsx:251 [HomePage] Loading state should now be false
page.tsx:41 [HomePage] Component rendering
page.tsx:647 [HomePage] Rendering content with states: {isLoadingUserInfo: false, loading: false, showingContent: true}
page.tsx:663 [HomePage] Rendering main content
page.tsx:56 [HomePage] Render {isLoadingUserInfo: false, loadingState: false, userInfoExists: true}
page.tsx:208 [HomePage] Prefetch effect triggered {initializationRef: true, hasUserInfo: true, isLoadingUserInfo: false}
ChatContainer.tsx:276 [ChatContainer] KeyDown: Enter repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: Meta repeat: false cmdPressedRef: false
ChatContainer.tsx:280 [ChatContainer] Setting cmdPressedRef to true
ChatContainer.tsx:293 [ChatContainer] KeyUp: Meta cmdPressedRef: true cmdPressedTime: 1743191748836
ChatContainer.tsx:298 [ChatContainer] Command press duration: 1394 ms
ChatContainer.tsx:276 [ChatContainer] KeyDown: w repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: h repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: w cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: a repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: h cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: t repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: a cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: i repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: t cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: s repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: i cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: s cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: m repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: m cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Backspace repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: Backspace cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: m repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: y repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: m cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: y cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: s repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: t repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: s cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: t cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: a repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: t repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: a cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: u repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: t cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: s repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: u cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: s cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: o repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: n repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: o cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: n cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Backspace repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: Backspace cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Backspace repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: Backspace cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Backspace repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: Backspace cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: i repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: n repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: i cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: t repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: n cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: t cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: h repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: e repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: h cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: e cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: a repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: n repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: a cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: k repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: n cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: k cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: i repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: i cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: c repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: l repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: c cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: l cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: i repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: n repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: i cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: i repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: n cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: c repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: i cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: c cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Shift repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown: ? repeat: false cmdPressedRef: false
ChatContainer.tsx:276 [ChatContainer] KeyDown:   repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: ? cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp:   cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:293 [ChatContainer] KeyUp: Shift cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Enter repeat: false cmdPressedRef: false
ChatContainer.tsx:293 [ChatContainer] KeyUp: Enter cmdPressedRef: false cmdPressedTime: null
ChatContainer.tsx:276 [ChatContainer] KeyDown: Meta repeat: false cmdPressedRef: false
ChatContainer.tsx:280 [ChatContainer] Setting cmdPressedRef to true
ChatContainer.tsx:276 [ChatContainer] KeyDown: Shift repeat: false cmdPressedRef: true
ChatContainer.tsx:287 [ChatContainer] Combo detected, clearing cmdPressedTime
